# -*- coding: utf-8 -*-
"""Functions_BuiltIn.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-NDqGP2Ud63D3hrhn8QjHbuTq6OJSsZI

# Funcoes Matematicas
"""

# abs - Usa o valor absoluto

num1 = -10
num2 = 10
print(abs(num1))
print(abs(num2))
print(abs(num1) + abs(num2)) # Nao leva em consideracao o sinal

# max - Maior valor em uma lista

maior_valor = max(10,20,30)
print(maior_valor)

lista = [-20,2,1,3.3]
print(max(lista))

# min - Maior valor em uma lista

menor_valor = min(10,20,30)
print(menor_valor)

lista = [-20,2,1,3.3]
print(min(lista))

# pow - Saber a potencia
x = 2
y = 3

print(pow(x,y))

# math.sqrt - raiz quadrada (precisa importar a lib math)
import math
print(math.sqrt(25))

# round - Arredonda o valor (segundo parametro qtd de casas decimais)

print(round(2.33444,2))

# floor - Retorna o menor valor inteiro
from math import floor
print(floor(2.33444))

# ceil - Retorna o menoer valor inteiro
from math import ceil
print(ceil(2.33444))

# divmod - Rertorna o cosciente e o resto de umam divisao
print(divmod(10,4))

numero = 70
caractere = chr(numero)
print('O numero %d eh mapeado para o caractere %s' % (numero, caractere))

caractere = 'F'
numero = ord(caractere)
print('O caractere %s eh mapeado para o numero %d' % (caractere,numero))

"""# Funcoes de Texto"""

# Deixa a primeira letra maiuscula

texto = 'ola brasil'
print(texto.capitalize())

texto = 'IsTo eH EstRaNhO'

# Tudo para minusculo
print(texto.upper())
# Tudo para maiusculo
print(texto.lower())
# swapcase - inverte a ordem, se esta maiusculo ficara minusculo
print(texto.swapcase())

# Title - Formata o texto para padrao de titulo
texto = 'IsTo eH EstRaNhO'

print(texto.title())

# Centralizar o texto
texto = '1234567'

print(texto.center(9))
print(texto.center(14))
print(texto.center(15,'-'))

# Justifica o texto
texto = '1234567'
print(texto.rjust(15))
print(texto.ljust(15))

# Conta a ocorrencia de valor

texto = '12121212'
print(texto.count('12'))

# Se texto comeca ou termina com um determinado texto
texto = '12121212'

print(texto.startswith('12'))
print(texto.endswith('12'))

# Faz um busca para retorna o indice do texto
texto = 'me encontra 20 10 5'
posicao = texto.find('10')
print(posicao)
posicao = texto.find('4') # Retorna -1 quando nao encontra o valor
print(posicao)

texto = 'me encontra 20 10 5'
posicao = texto.index('r')
print(posicao)

# Substituicao de texto
texto = 'Ol@ eu sou @ fulan@'

novo_texto = texto.replace('@','a')

print(novo_texto)

# Split do texto
texto = '10,20,30'
print(texto.split(','))

# Divite o texto onde tenha quebra de linha
texto = 'Ola, bom dia\n este eh um curso de python\n seja bem vindo!'

print(texto.splitlines())

# Saber se o texto eh alfanumerico
print('acbdE3 '.isalpha())
print('acbdE3'.isalnum())
print('123.4'.isdecimal())
print('12'.isdecimal())
print('123a'.isdecimal())

"""# Funcoes para Listas"""

# Ordernar uma lista
lista = [5,19,4,2,7,5,6,3,99,8,66.7]
lista.sort()
print(lista)

lista.sort(reverse = True)
print(lista)

# Ordena pelo tamanho da string
def sort_por_tamanho(item):
    return len(item)

lista = ['a','accd','c','b','ab','abc','cb','b']

lista.sort(key=sort_por_tamanho)

print(lista)

# Inverte uma lista

lista = [5,19,4,2,7,5,6,3,99,8,66.7]

lista.reverse()

print(lista)

# Unpacking
produtos = [
    ['carro','R$ 100.000'],
    ['cadeira','R$ 500'],
    ['moto','R$ 50.000'],
    ['armario','R$ 1500']
]

for produto, valor in produtos:
    print(produto, valor)

nomes = ('Jose','Carlos','Joao','Marcelo','Arthur',)

dicionario = dict.fromkeys(nomes, 10)

print(dicionario)

"""# Funcoes de Data e Hora"""

import datetime

data_completa = datetime.datetime.now()

data = data_completa.date()
hora = data_completa.time()

print(data_completa)
print(data)
print(hora)

import datetime

data_completa = datetime.datetime.now()

print('Dia ', data_completa.day)
print('Mes ', data_completa.month)
print('Ano ', data_completa.year)
print('Hora ', data_completa.hour)
print('Minuto ', data_completa.minute)
print('Segundos ', data_completa.second)

import datetime

data = datetime.date(200,9,30)
data = datetime.date(day=30, month=9, year=2000)

print(data)

import datetime
hora = datetime.time(10,30,20)
print(hora)

import datetime

data = datetime.datetime(2022,10,8,10,30,20)
print(data)

# Y ano, m mes, d dia, H hora formato 00:23, M minuto, S segundo
# A dia da semana, a dia da semana abrev, B nome do mes, b nome do mes abrev
# I hora formato 12 horas, p AM PM
import datetime

atual = datetime.datetime.now()

current_time = atual.strftime('%y/%m/%d %H:%M:%S')

print(current_time)

print('--------------------------------')

data = datetime.datetime(2022,10,8,10,30,20)

print(data.strftime('%A - %a'))
print(data.strftime('%B - %b'))
print(data.strftime('%H - %I'))
print(data.strftime('%I - %p'))

"""# Manipulando datas e horas"""

import datetime

data1 = datetime.datetime(2020,10,20)
data2 = datetime.datetime(2020,11,20)

diferenca = data2 - data1

print(diferenca)
print(type(diferenca)) # timedelta - permite mostrar a diferenca entre intervalo de tempos

from datetime import datetime, timedelta

data_atual = datetime.now()

data_futura1 = data_atual + timedelta(weeks = 4)
data_futura2 = data_atual + timedelta(days = 30)
data_futura3 = data_atual + timedelta(hours = 12)
data_futura4 = data_atual + timedelta(minutes = 60)

print('Data Atual: ', data_atual)
print('Mais 4 semanas: ',data_futura1)
print('Mais 30 dias: ',data_futura2)
print('Mais 12 horas: ',data_futura3)
print('Mais 60 minutos: ',data_futura4)

import datetime

data_2000 = datetime.datetime(2000,1,1,0,0,0)
data_agora = datetime.datetime.now()

diferenca = data_agora - data_2000

print('Desde o ano 2000 passou ', diferenca.days, ' dias')
print('Desde o ano 2000 passou ', diferenca.seconds, ' segundos')
print('Desde o ano 2000 passou ', diferenca.microseconds, ' microsegundos')

anos = int(diferenca.days/365)
meses = anos * 12

print('Desde o ano 2000 passou ', anos, ' anos')
print('Desde o ano 2000 passou ', meses, ' meses')

print(diferenca)

"""# Lendo Entrada de Datas"""

import datetime

data_txt = input('Digite a data no formato dd/mm/yyyy: ')

datetime = datetime.datetime.strptime(data_txt, '%d/%m/%Y')

print(datetime)
print(type(datetime))