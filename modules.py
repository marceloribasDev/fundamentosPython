# -*- coding: utf-8 -*-
"""Modules.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12G_JAhmWcyjkzwU3_WEi4tTT9XQEDpAT

# Introducao a Modulos

- Bibliotecas empacotadas

- Trazem funções prontas:
    - Ler arquivos
    - Ciência de dados
    - Conectar com Banco de Dados
    - Interagir com Serviços na Nuvem
    - Etc.

- Você pode criar seus módulos!

- Você pode criar seus módulos
    - Depende do ambiente Python que você usa

- Novos módulos podem ser instalados com programa pip
"""

import datetime
print(type(datetime))

data = datetime.datetime(2022,5,15,10,4,5)
print(data)

import random as rd
print(rd.randrange(10,100))

from random import randrange
print(randrange(100000,999999))

from random import randrange as rd
print(rd(100000,999999))

from random import randrange, randint
print(randrange(100000,999999))
print(randint(100000,999999))

from random import *
print(randint(1,10))

"""# Explorando um modulo"""

import random # Retorna funcoes, atributos e classes disponiveis no modulo
dir(random)

import random 
dir(random.randrange)

import random 
#print(random.__name__)
#print(random.__file__)
print(random.__doc__)

from random import randrange
print(randrange.__doc__)
print(randrange.__name__)

"""# Install / Deinstall Modulos"""

!pip list # Lista pacotes pre instalados (Exemplo do google colab)

# Install module
!pip install pmdarima

# Uninstall module
!pip uninstall pmdarima

# Instala versao especifica
!pip install pmdarima==1.1.1

!pip uninstall pmdarima==1.1.1

"""# Criando os proprios modulos

Criar arquivo no google colab e colocar o seguinte codigo:

''' Este eh o modulo teste deselvolvido em aula '''

PI = 3.1415

class Teste:
    ''' Essa e a classe teste '''
    def __init__(self):
        print('Classe teste')

def myFunc(num):
    ''' Esta eh a funcao teste '''
    print(num)
"""

import teste

dir(teste)

import teste
print(teste.PI)
var = teste.Teste()
teste.myFunc(10)

from teste import PI
print(PI)

"""# Parametros de Execucao"""

print(__name__)

import teste
print(teste.__name__)
print(teste.__file__)

def main():
    print('Aqui inicia o programa')

if(__name__ == '__main__'):
    main()

import sys
if(__name__ == '__main__'):
    print('Num argumentos: ', len(sys.argv))
    print('Args sao: ', sys.argv)

"""# Criando e lendo ajudo de modulos"""

import sys
print(sys.__doc__)

'''
Este eh o arquivo principal contento uma variavel chamada euler e uma funcao chamada soma
'''

euler = 2.72838

def soma(num1, num2):
    '''Funcao que soma dois numeros recebidos por entrada '''
    return num1 + num2

print(__doc__)
print(soma.__doc__)